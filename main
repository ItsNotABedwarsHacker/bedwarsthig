local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Declare a function to handle the long jump
function longJump()
   -- Set a timer to track the elapsed time
   local timer = 0

   -- Update the timer every frame
   while timer < 3 do
      timer = timer + 1/60
      player:setVelocity(0, 10)
      yield()
   end
end

-- Bind the long jump function to a key press event
input:bind("r", longJump)

-- Declare a function to handle the float
function float()
   -- Set the player's gravity to 0
   player.Character.Humanoid.PlatformStand = true

   -- Update the player's position every frame
   while true do
      player.Character.HumanoidRootPart.Position = player.Character.HumanoidRootPart.Position + Vector3.new(0, 0.1, 0)
      wait(1/60)
   end
end

-- Bind the float function to a key press event
UserInputService.InputBegan:Connect(function(input)
   if input.KeyCode == Enum.KeyCode.C then
      float()
   end
end)

-- Stop the float when the "c" key is released
UserInputService.InputEnded:Connect(function(input)
   if input.KeyCode == Enum.KeyCode.C then
      player.Character.Humanoid.PlatformStand = false
   end
end)

-- Get the player's health
local health = player.Health

-- Find the nearest player
local nearestPlayer = Players:GetPlayers()[1]
for _, p in pairs(Players:GetPlayers()) do
   if (p.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude < (nearestPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude then
      nearestPlayer = p
   end
end

-- Teleport the player above the nearest player if their health is below 26
if health.Value < 26 then
   player.Character.HumanoidRootPart.CFrame = CFrame.new(nearestPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 10, 0))

   -- Wait for 2 seconds
   wait(2)
end
